package org.opendatakit.briefcase.delivery.cli.launchgui;

import static java.awt.event.KeyEvent.VK_ESCAPE;
import static javax.swing.JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT;
import static javax.swing.KeyStroke.getKeyStroke;

import java.awt.FlowLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.nio.file.Path;
import java.util.Optional;
import java.util.function.Consumer;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSeparator;
import javax.swing.JTextField;
import org.opendatakit.briefcase.delivery.ui.reused.events.WindowAdapterBuilder;
import org.opendatakit.briefcase.delivery.ui.reused.filsystem.FileChooser;

public class WorkspaceLocationDialogForm extends JDialog {
  private JPanel contentPane;
  private JPanel mainPane;
  private JPanel actionPane;
  private JButton startButton;
  private JTextField workspaceField;
  private JComboBox previousWorkspaceSelect;
  private JPanel workspaceFieldActionsPane;
  private JButton workspaceChooseButton;
  private JButton workspaceClearButton;
  private Optional<Path> workspaceLocation = Optional.empty();

  public WorkspaceLocationDialogForm(Consumer<Optional<Path>> startCallback) {
    setContentPane(contentPane);
    setModal(true);

    setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);

    workspaceChooseButton.addActionListener(__ -> FileChooser
        .directory(contentPane, Optional.empty())
        .choose()
        .ifPresent(file -> {
          workspaceLocation = Optional.of(file.toPath());
          workspaceField.setText(file.toPath().toString());
          updateButtons();
        }));

    workspaceClearButton.addActionListener(__ -> {
      workspaceLocation = Optional.empty();
      workspaceField.setText("");
      updateButtons();
    });

    startButton.addActionListener(__ -> {
      startCallback.accept(workspaceLocation);
      dispose();
    });

    setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);

    addWindowListener(new WindowAdapterBuilder().onClosing(e -> dispose()).build());

    contentPane.registerKeyboardAction(e -> dispose(), getKeyStroke(VK_ESCAPE, 0), WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);

  }

  private void updateButtons() {
    startButton.setEnabled(workspaceLocation.isPresent());
    workspaceChooseButton.setVisible(workspaceLocation.isEmpty());
    workspaceClearButton.setVisible(workspaceLocation.isPresent());
  }

  {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
    $$$setupUI$$$();
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer
   * >>> IMPORTANT!! <<<
   * DO NOT edit this method OR call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    contentPane = new JPanel();
    contentPane.setLayout(new GridBagLayout());
    mainPane = new JPanel();
    mainPane.setLayout(new GridBagLayout());
    GridBagConstraints gbc;
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 1;
    gbc.weightx = 1.0;
    gbc.weighty = 1.0;
    gbc.fill = GridBagConstraints.BOTH;
    contentPane.add(mainPane, gbc);
    final JLabel label1 = new JLabel();
    label1.setText("Workspace location");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 2;
    gbc.anchor = GridBagConstraints.EAST;
    mainPane.add(label1, gbc);
    final JPanel spacer1 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 2;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    mainPane.add(spacer1, gbc);
    final JPanel spacer2 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 3;
    gbc.gridwidth = 4;
    gbc.fill = GridBagConstraints.VERTICAL;
    mainPane.add(spacer2, gbc);
    workspaceField = new JTextField();
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 2;
    gbc.weightx = 1.0;
    gbc.anchor = GridBagConstraints.WEST;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    mainPane.add(workspaceField, gbc);
    final JSeparator separator1 = new JSeparator();
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 4;
    gbc.gridwidth = 4;
    gbc.fill = GridBagConstraints.BOTH;
    mainPane.add(separator1, gbc);
    final JPanel spacer3 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 5;
    gbc.gridwidth = 4;
    gbc.fill = GridBagConstraints.VERTICAL;
    mainPane.add(spacer3, gbc);
    previousWorkspaceSelect = new JComboBox();
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 6;
    gbc.gridwidth = 2;
    gbc.anchor = GridBagConstraints.WEST;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    mainPane.add(previousWorkspaceSelect, gbc);
    final JPanel spacer4 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 6;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    mainPane.add(spacer4, gbc);
    final JLabel label2 = new JLabel();
    label2.setText("Previous workspaces");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 6;
    gbc.anchor = GridBagConstraints.EAST;
    mainPane.add(label2, gbc);
    workspaceFieldActionsPane = new JPanel();
    workspaceFieldActionsPane.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
    gbc = new GridBagConstraints();
    gbc.gridx = 3;
    gbc.gridy = 2;
    gbc.fill = GridBagConstraints.BOTH;
    mainPane.add(workspaceFieldActionsPane, gbc);
    workspaceChooseButton = new JButton();
    workspaceChooseButton.setText("Choose");
    workspaceFieldActionsPane.add(workspaceChooseButton);
    workspaceClearButton = new JButton();
    workspaceClearButton.setText("Clear");
    workspaceClearButton.setVisible(false);
    workspaceFieldActionsPane.add(workspaceClearButton);
    final JPanel spacer5 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 1;
    gbc.gridwidth = 4;
    gbc.fill = GridBagConstraints.VERTICAL;
    mainPane.add(spacer5, gbc);
    final JLabel label3 = new JLabel();
    label3.setText("<html>You can start Briefcase manually choosing a workspace location<br/>or by selecting one of the locations previously used:</html>");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 0;
    gbc.gridwidth = 4;
    gbc.weightx = 1.0;
    gbc.anchor = GridBagConstraints.WEST;
    mainPane.add(label3, gbc);
    actionPane = new JPanel();
    actionPane.setLayout(new GridBagLayout());
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 2;
    gbc.weightx = 1.0;
    gbc.fill = GridBagConstraints.BOTH;
    contentPane.add(actionPane, gbc);
    startButton = new JButton();
    startButton.setEnabled(false);
    startButton.setText("Start");
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 1;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    actionPane.add(startButton, gbc);
    final JPanel spacer6 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 1;
    gbc.weightx = 1.0;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    actionPane.add(spacer6, gbc);
    final JPanel spacer7 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 0;
    gbc.gridwidth = 2;
    gbc.fill = GridBagConstraints.VERTICAL;
    actionPane.add(spacer7, gbc);
    final JPanel spacer8 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 3;
    gbc.fill = GridBagConstraints.VERTICAL;
    contentPane.add(spacer8, gbc);
    final JPanel spacer9 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 1;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    contentPane.add(spacer9, gbc);
    final JPanel spacer10 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 1;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    contentPane.add(spacer10, gbc);
    final JPanel spacer11 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 0;
    gbc.fill = GridBagConstraints.VERTICAL;
    contentPane.add(spacer11, gbc);
  }

  /**
   * @noinspection ALL
   */
  public JComponent $$$getRootComponent$$$() { return contentPane; }

}
