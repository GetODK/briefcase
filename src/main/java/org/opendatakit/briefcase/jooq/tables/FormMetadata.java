/*
 * This file is generated by jOOQ.
 */
package org.opendatakit.briefcase.jooq.tables;


import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.opendatakit.briefcase.jooq.Indexes;
import org.opendatakit.briefcase.jooq.Keys;
import org.opendatakit.briefcase.jooq.Public;
import org.opendatakit.briefcase.jooq.tables.records.FormMetadataRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class FormMetadata extends TableImpl<FormMetadataRecord> {

  private static final long serialVersionUID = -2003636961;

  /**
   * The reference instance of <code>PUBLIC.FORM_METADATA</code>
   */
  public static final FormMetadata FORM_METADATA = new FormMetadata();

  /**
   * The class holding records for this type
   */
  @Override
  public Class<FormMetadataRecord> getRecordType() {
    return FormMetadataRecord.class;
  }

  /**
   * The column <code>PUBLIC.FORM_METADATA.ID</code>.
   */
  public final TableField<FormMetadataRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

  /**
   * The column <code>PUBLIC.FORM_METADATA.FORM_NAME</code>.
   */
  public final TableField<FormMetadataRecord, String> FORM_NAME = createField("FORM_NAME", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

  /**
   * The column <code>PUBLIC.FORM_METADATA.FORM_ID</code>.
   */
  public final TableField<FormMetadataRecord, String> FORM_ID = createField("FORM_ID", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

  /**
   * The column <code>PUBLIC.FORM_METADATA.FORM_VERSION</code>.
   */
  public final TableField<FormMetadataRecord, String> FORM_VERSION = createField("FORM_VERSION", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

  /**
   * The column <code>PUBLIC.FORM_METADATA.FORM_DIR</code>.
   */
  public final TableField<FormMetadataRecord, String> FORM_DIR = createField("FORM_DIR", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

  /**
   * The column <code>PUBLIC.FORM_METADATA.FORM_FILENAME</code>.
   */
  public final TableField<FormMetadataRecord, String> FORM_FILENAME = createField("FORM_FILENAME", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

  /**
   * The column <code>PUBLIC.FORM_METADATA.CURSOR_TYPE</code>.
   */
  public final TableField<FormMetadataRecord, String> CURSOR_TYPE = createField("CURSOR_TYPE", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

  /**
   * The column <code>PUBLIC.FORM_METADATA.CURSOR_VALUE</code>.
   */
  public final TableField<FormMetadataRecord, String> CURSOR_VALUE = createField("CURSOR_VALUE", org.jooq.impl.SQLDataType.CLOB, this, "");

  /**
   * The column <code>PUBLIC.FORM_METADATA.LAST_EXPORTED_SUBMISSION_DATE</code>.
   */
  public final TableField<FormMetadataRecord, OffsetDateTime> LAST_EXPORTED_SUBMISSION_DATE = createField("LAST_EXPORTED_SUBMISSION_DATE", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE, this, "");

  /**
   * Create a <code>PUBLIC.FORM_METADATA</code> table reference
   */
  public FormMetadata() {
    this(DSL.name("FORM_METADATA"), null);
  }

  /**
   * Create an aliased <code>PUBLIC.FORM_METADATA</code> table reference
   */
  public FormMetadata(String alias) {
    this(DSL.name(alias), FORM_METADATA);
  }

  /**
   * Create an aliased <code>PUBLIC.FORM_METADATA</code> table reference
   */
  public FormMetadata(Name alias) {
    this(alias, FORM_METADATA);
  }

  private FormMetadata(Name alias, Table<FormMetadataRecord> aliased) {
    this(alias, aliased, null);
  }

  private FormMetadata(Name alias, Table<FormMetadataRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment(""));
  }

  public <O extends Record> FormMetadata(Table<O> child, ForeignKey<O, FormMetadataRecord> key) {
    super(child, key, FORM_METADATA);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Schema getSchema() {
    return Public.PUBLIC;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public List<Index> getIndexes() {
    return Arrays.<Index>asList(Indexes.SYS_IDX_SYS_PK_10131_10133);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public UniqueKey<FormMetadataRecord> getPrimaryKey() {
    return Keys.SYS_PK_10131;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public List<UniqueKey<FormMetadataRecord>> getKeys() {
    return Arrays.<UniqueKey<FormMetadataRecord>>asList(Keys.SYS_PK_10131);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public FormMetadata as(String alias) {
    return new FormMetadata(DSL.name(alias), this);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public FormMetadata as(Name alias) {
    return new FormMetadata(alias, this);
  }

  /**
   * Rename this table
   */
  @Override
  public FormMetadata rename(String name) {
    return new FormMetadata(DSL.name(name), null);
  }

  /**
   * Rename this table
   */
  @Override
  public FormMetadata rename(Name name) {
    return new FormMetadata(name, null);
  }
}
